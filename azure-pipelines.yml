jobs: 
  - 
    job: 
      displayName: "Build for $(OSTarget)"
      steps: 
        - 
          condition: "notin(variables['Build.Reason'], 'PullRequest')"
          displayName: "Install microbuild signing plugin"
          inputs: 
            signType: Real
            zipSources: false
          task: MicroBuildSigningPlugin@3
        - 
          displayName: "Use .Net Core SDK 3.1.x"
          inputs: 
            version: 3.1.x
          task: UseDotNet@2
        - 
          displayName: "dotnet restore"
          inputs: 
            command: restore
            projects: |
                src/LanguageServer/Impl/Microsoft.Python.LanguageServer.csproj
                src/Publish/SignLayout.csproj
            restoreDirectory: $(Build.BinariesDirectory)
          task: DotNetCoreCLI@2
        - 
          condition: "notin(variables['Build.Reason'], 'PullRequest')"
          displayName: "Sign assemblies"
          inputs: 
            configuration: $(BuildConfiguration)
            msbuildArguments: "/p:OutputPath=$(Build.BinariesDirectory)\\out /p:SignServer=true /p:SignParser=true"
            platform: $(BuildPlatform)
            solution: src/Publish/SignLayout.csproj
          task: MSBuild@1
        - 
          displayName: "NuGet pack language server"
          inputs: 
            basePath: $(Build.BinariesDirectory)/out
            buildProperties: os=-$(OSTarget)
            command: pack
            packDestination: $(Build.ArtifactStagingDirectory)\packages
            packagesToPack: src/LanguageServer/Impl/Python-Language-Server.nuspec
            versionEnvVar: NugetPackageVersion
            versioningScheme: byEnvVar
          task: NuGetCommand@2
        - 
          displayName: "NuGet pack parsing"
          inputs: 
            basePath: $(Build.BinariesDirectory)/out
            buildProperties: os=-$(OSTarget)
            command: pack
            packDestination: $(Build.ArtifactStagingDirectory)\packages
            packagesToPack: src/Parsing/Impl/Microsoft-Python-Parsing.nuspec
            versionEnvVar: NugetPackageVersion
            versioningScheme: byEnvVar
          task: NuGetCommand@2
        - 
          condition: "notin(variables['Build.Reason'], 'PullRequest')"
          displayName: "Sign packages"
          inputs: 
            configuration: $(BuildConfiguration)
            msbuildArguments: "/p:OutputPath=$(Build.ArtifactStagingDirectory)\\packages /p:SignPackage=true /p:Version=$(Build.BuildNumber)"
            platform: $(BuildPlatform)
            solution: src/Publish/SignLayout.csproj
          task: MSBuild@1
        - 
          condition: "and(succeeded(), eq(variables['ShouldPublishNuget'], 'True'), eq(variables['OSTarget'], 'any'), notin(variables['Build.Reason'], 'PullRequest'))"
          displayName: "NuGet publish parsing "
          inputs: 
            command: push
            nuGetFeedType: external
            packagesToPush: $(Build.ArtifactStagingDirectory)/**/Microsoft.Python.Parsing*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg
            publishFeedCredentials: rchiodo_nuget
          task: NuGetCommand@2
          timeoutInMinutes: 20
        - 
          condition: succeededOrFailed()
          displayName: "Execute cleanup tasks"
          task: MicroBuildCleanup@1
      strategy: 
        matrix: $(OSTarget)
name: $(VersionMajorMinor)$(VersionPatchCounter)
pool: 
  name: VSEngSS-MicroBuild2019
trigger: 
  branches: 
    include: 
      - master
      - azure-pipelines