{
  "UniqueId": "requests(2.21.0)",
  "Documentation": "Requests HTTP Library\r\n~~~~~~~~~~~~~~~~~~~~~\r\n\r\nRequests is an HTTP library, written in Python, for human beings. Basic GET\r\nusage:\r\n\r\n   >>> import requests\r\n   >>> r = requests.get('https://www.python.org')\r\n   >>> r.status_code\r\n   200\r\n   >>> 'Python is a programming language' in r.content\r\n   True\r\n\r\n... or POST:\r\n\r\n   >>> payload = dict(key1='value1', key2='value2')\r\n   >>> r = requests.post('https://httpbin.org/post', data=payload)\r\n   >>> print(r.text)\r\n   {\r\n     ...\r\n     \"form\": {\r\n       \"key2\": \"value2\",\r\n       \"key1\": \"value1\"\r\n     },\r\n     ...\r\n   }\r\n\r\nThe other HTTP methods are supported - see `requests.api`. Full documentation\r\nis at <http://python-requests.org>.\r\n\r\n:copyright: (c) 2017 by Kenneth Reitz.\r\n:license: Apache 2.0, see LICENSE for more details.\r\n",
  "Functions": [
    {
      "Documentation": null,
      "Overloads": [
        {
          "Parameters": [
            {
              "Name": "urllib3_version",
              "Type": null,
              "DefaultValue": null,
              "Kind": 0
            },
            {
              "Name": "chardet_version",
              "Type": null,
              "DefaultValue": null,
              "Kind": 0
            }
          ],
          "ReturnType": null
        }
      ],
      "Attributes": 0,
      "Classes": [],
      "Functions": [],
      "Id": 435179778,
      "Name": "check_compatibility",
      "IndexSpan": {
        "Start": 973,
        "Length": 19
      }
    },
    {
      "Documentation": null,
      "Overloads": [
        {
          "Parameters": [
            {
              "Name": "cryptography_version",
              "Type": null,
              "DefaultValue": null,
              "Kind": 0
            }
          ],
          "ReturnType": null
        }
      ],
      "Attributes": 0,
      "Classes": [],
      "Functions": [],
      "Id": -399540245,
      "Name": "_check_cryptography",
      "IndexSpan": {
        "Start": 1808,
        "Length": 19
      }
    },
    {
      "Documentation": "Constructs and sends a :class:`Request <Request>`.\n\n    :param method: method for the new :class:`Request` object.\n    :param url: URL for the new :class:`Request` object.\n    :param params: (optional) Dictionary, list of tuples or bytes to send\n        in the body of the :class:`Request`.\n    :param data: (optional) Dictionary, list of tuples, bytes, or file-like\n        object to send in the body of the :class:`Request`.\n    :param json: (optional) A JSON serializable Python object to send in the body of the :class:`Request`.\n    :param headers: (optional) Dictionary of HTTP Headers to send with the :class:`Request`.\n    :param cookies: (optional) Dict or CookieJar object to send with the :class:`Request`.\n    :param files: (optional) Dictionary of ``'name': file-like-objects`` (or ``{'name': file-tuple}``) for multipart encoding upload.\n        ``file-tuple`` can be a 2-tuple ``('filename', fileobj)``, 3-tuple ``('filename', fileobj, 'content_type')``\n        or a 4-tuple ``('filename', fileobj, 'content_type', custom_headers)``, where ``'content-type'`` is a string\n        defining the content type of the given file and ``custom_headers`` a dict-like object containing additional headers\n        to add for the file.\n    :param auth: (optional) Auth tuple to enable Basic/Digest/Custom HTTP Auth.\n    :param timeout: (optional) How many seconds to wait for the server to send data\n        before giving up, as a float, or a :ref:`(connect timeout, read\n        timeout) <timeouts>` tuple.\n    :type timeout: float or tuple\n    :param allow_redirects: (optional) Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to ``True``.\n    :type allow_redirects: bool\n    :param proxies: (optional) Dictionary mapping protocol to the URL of the proxy.\n    :param verify: (optional) Either a boolean, in which case it controls whether we verify\n            the server's TLS certificate, or a string, in which case it must be a path\n            to a CA bundle to use. Defaults to ``True``.\n    :param stream: (optional) if ``False``, the response content will be immediately downloaded.\n    :param cert: (optional) if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.\n    :return: :class:`Response <Response>` object\n    :rtype: requests.Response\n\n    Usage::\n\n      >>> import requests\n      >>> req = requests.request('GET', 'https://httpbin.org/get')\n      <Response [200]>\n    ",
      "Overloads": [
        {
          "Parameters": [
            {
              "Name": "method",
              "Type": "t:str",
              "DefaultValue": null,
              "Kind": 0
            },
            {
              "Name": "url",
              "Type": "t:str",
              "DefaultValue": null,
              "Kind": 0
            },
            {
              "Name": "kwargs",
              "Type": null,
              "DefaultValue": null,
              "Kind": 2
            }
          ],
          "ReturnType": "i:requests.models:Response"
        }
      ],
      "Attributes": 0,
      "Classes": [],
      "Functions": [],
      "Id": -1769342312,
      "Name": "request",
      "IndexSpan": {
        "Start": 220,
        "Length": 7
      }
    },
    {
      "Documentation": "Sends a GET request.\n\n    :param url: URL for the new :class:`Request` object.\n    :param params: (optional) Dictionary, list of tuples or bytes to send\n        in the body of the :class:`Request`.\n    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n    :return: :class:`Response <Response>` object\n    :rtype: requests.Response\n    ",
      "Overloads": [
        {
          "Parameters": [
            {
              "Name": "url",
              "Type": "t:typing:Union[str, bytes]",
              "DefaultValue": null,
              "Kind": 0
            },
            {
              "Name": "params",
              "Type": "t:typing:Union[typing:Mapping[typing:Union[str, bytes, int, float], typing:Union[str, bytes, int, float, typing:Iterable[typing:Union[str, bytes, int, float]]]], typing:Union[str, bytes], typing:Tuple[typing:Union[str, bytes, int, float], typing:Union[str, bytes, int, float, typing:Iterable[typing:Union[str, bytes, int, float]]]], typing:Mapping[str, typing:Union[str, bytes, int, float, typing:Iterable[typing:Union[str, bytes, int, float]]]], typing:Mapping[bytes, typing:Union[str, bytes, int, float, typing:Iterable[typing:Union[str, bytes, int, float]]]], typing:Mapping[int, typing:Union[str, bytes, int, float, typing:Iterable[typing:Union[str, bytes, int, float]]]], typing:Mapping[float, typing:Union[str, bytes, int, float, typing:Iterable[typing:Union[str, bytes, int, float]]]]]",
              "DefaultValue": "i:ellipsis",
              "Kind": 0
            },
            {
              "Name": "kwargs",
              "Type": null,
              "DefaultValue": null,
              "Kind": 2
            }
          ],
          "ReturnType": "i:requests.models:Response"
        }
      ],
      "Attributes": 0,
      "Classes": [],
      "Functions": [],
      "Id": 787423,
      "Name": "get",
      "IndexSpan": {
        "Start": 3035,
        "Length": 3
      }
    },
    {
      "Documentation": "Sends a HEAD request.\n\n    :param url: URL for the new :class:`Request` object.\n    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n    :return: :class:`Response <Response>` object\n    :rtype: requests.Response\n    ",
      "Overloads": [
        {
          "Parameters": [
            {
              "Name": "url",
              "Type": "t:str",
              "DefaultValue": null,
              "Kind": 0
            },
            {
              "Name": "kwargs",
              "Type": null,
              "DefaultValue": null,
              "Kind": 2
            }
          ],
          "ReturnType": "i:requests.models:Response"
        }
      ],
      "Attributes": 0,
      "Classes": [],
      "Functions": [],
      "Id": 24439415,
      "Name": "head",
      "IndexSpan": {
        "Start": 3905,
        "Length": 4
      }
    },
    {
      "Documentation": "Sends a POST request.\n\n    :param url: URL for the new :class:`Request` object.\n    :param data: (optional) Dictionary, list of tuples, bytes, or file-like\n        object to send in the body of the :class:`Request`.\n    :param json: (optional) json data to send in the body of the :class:`Request`.\n    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n    :return: :class:`Response <Response>` object\n    :rtype: requests.Response\n    ",
      "Overloads": [
        {
          "Parameters": [
            {
              "Name": "url",
              "Type": "t:str",
              "DefaultValue": null,
              "Kind": 0
            },
            {
              "Name": "data",
              "Type": "t:typing:Union[NoneType, str, bytes, typing:MutableMapping[str, typing:Any], typing:MutableMapping[Unknown, typing:Any], typing:Iterable[typing:Tuple[str, str]], Unknown]",
              "DefaultValue": "i:ellipsis",
              "Kind": 0
            },
            {
              "Name": "json",
              "Type": "t:ellipsis",
              "DefaultValue": "i:ellipsis",
              "Kind": 0
            },
            {
              "Name": "kwargs",
              "Type": null,
              "DefaultValue": null,
              "Kind": 2
            }
          ],
          "ReturnType": "i:requests.models:Response"
        }
      ],
      "Attributes": 0,
      "Classes": [],
      "Functions": [],
      "Id": 24687927,
      "Name": "post",
      "IndexSpan": {
        "Start": 4264,
        "Length": 4
      }
    },
    {
      "Documentation": "Sends a PATCH request.\n\n    :param url: URL for the new :class:`Request` object.\n    :param data: (optional) Dictionary, list of tuples, bytes, or file-like\n        object to send in the body of the :class:`Request`.\n    :param json: (optional) json data to send in the body of the :class:`Request`.\n    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n    :return: :class:`Response <Response>` object\n    :rtype: requests.Response\n    ",
      "Overloads": [
        {
          "Parameters": [
            {
              "Name": "url",
              "Type": "t:str",
              "DefaultValue": null,
              "Kind": 0
            },
            {
              "Name": "data",
              "Type": "t:typing:Union[NoneType, str, bytes, typing:MutableMapping[str, typing:Any], typing:MutableMapping[Unknown, typing:Any], typing:Iterable[typing:Tuple[str, str]], Unknown]",
              "DefaultValue": "i:ellipsis",
              "Kind": 0
            },
            {
              "Name": "json",
              "Type": "t:ellipsis",
              "DefaultValue": "i:ellipsis",
              "Kind": 0
            },
            {
              "Name": "kwargs",
              "Type": null,
              "DefaultValue": null,
              "Kind": 2
            }
          ],
          "ReturnType": "i:requests.models:Response"
        }
      ],
      "Attributes": 0,
      "Classes": [],
      "Functions": [],
      "Id": 764909201,
      "Name": "patch",
      "IndexSpan": {
        "Start": 5387,
        "Length": 5
      }
    },
    {
      "Documentation": "Sends a PUT request.\n\n    :param url: URL for the new :class:`Request` object.\n    :param data: (optional) Dictionary, list of tuples, bytes, or file-like\n        object to send in the body of the :class:`Request`.\n    :param json: (optional) json data to send in the body of the :class:`Request`.\n    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n    :return: :class:`Response <Response>` object\n    :rtype: requests.Response\n    ",
      "Overloads": [
        {
          "Parameters": [
            {
              "Name": "url",
              "Type": "t:str",
              "DefaultValue": null,
              "Kind": 0
            },
            {
              "Name": "data",
              "Type": "t:typing:Union[NoneType, str, bytes, typing:MutableMapping[str, typing:Any], typing:MutableMapping[Unknown, typing:Any], typing:Iterable[typing:Tuple[str, str]], Unknown]",
              "DefaultValue": "i:ellipsis",
              "Kind": 0
            },
            {
              "Name": "json",
              "Type": "t:ellipsis",
              "DefaultValue": "i:ellipsis",
              "Kind": 0
            },
            {
              "Name": "kwargs",
              "Type": null,
              "DefaultValue": null,
              "Kind": 2
            }
          ],
          "ReturnType": "i:requests.models:Response"
        }
      ],
      "Attributes": 0,
      "Classes": [],
      "Functions": [],
      "Id": 796568,
      "Name": "put",
      "IndexSpan": {
        "Start": 4838,
        "Length": 3
      }
    },
    {
      "Documentation": "Sends a DELETE request.\n\n    :param url: URL for the new :class:`Request` object.\n    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n    :return: :class:`Response <Response>` object\n    :rtype: requests.Response\n    ",
      "Overloads": [
        {
          "Parameters": [
            {
              "Name": "url",
              "Type": "t:str",
              "DefaultValue": null,
              "Kind": 0
            },
            {
              "Name": "kwargs",
              "Type": null,
              "DefaultValue": null,
              "Kind": 2
            }
          ],
          "ReturnType": "i:requests.models:Response"
        }
      ],
      "Attributes": 0,
      "Classes": [],
      "Functions": [],
      "Id": 1897257090,
      "Name": "delete",
      "IndexSpan": {
        "Start": 5942,
        "Length": 6
      }
    },
    {
      "Documentation": "Sends an OPTIONS request.\n\n    :param url: URL for the new :class:`Request` object.\n    :param \\*\\*kwargs: Optional arguments that ``request`` takes.\n    :return: :class:`Response <Response>` object\n    :rtype: requests.Response\n    ",
      "Overloads": [
        {
          "Parameters": [
            {
              "Name": "url",
              "Type": "t:str",
              "DefaultValue": null,
              "Kind": 0
            },
            {
              "Name": "kwargs",
              "Type": null,
              "DefaultValue": null,
              "Kind": 2
            }
          ],
          "ReturnType": "i:requests.models:Response"
        }
      ],
      "Attributes": 0,
      "Classes": [],
      "Functions": [],
      "Id": 180457127,
      "Name": "options",
      "IndexSpan": {
        "Start": 3537,
        "Length": 7
      }
    },
    {
      "Documentation": "\n    Returns a :class:`Session` for context-management.\n\n    .. deprecated:: 1.0.0\n\n        This method has been deprecated since version 1.0.0 and is only kept for\n        backwards compatibility. New code should use :class:`~requests.sessions.Session`\n        to create a session. This may be removed at a future date.\n\n    :rtype: Session\n    ",
      "Overloads": [
        {
          "Parameters": [],
          "ReturnType": "i:requests.sessions:Session"
        }
      ],
      "Attributes": 0,
      "Classes": [],
      "Functions": [],
      "Id": -880047457,
      "Name": "session",
      "IndexSpan": {
        "Start": 28943,
        "Length": 7
      }
    }
  ],
  "Variables": [
    {
      "Value": "p:urllib3",
      "Id": 1260465222,
      "Name": "urllib3",
      "IndexSpan": {
        "Start": 878,
        "Length": 7
      }
    },
    {
      "Value": "p:chardet",
      "Id": -2125975290,
      "Name": "chardet",
      "IndexSpan": {
        "Start": 893,
        "Length": 7
      }
    },
    {
      "Value": "p:warnings",
      "Id": 1876311406,
      "Name": "warnings",
      "IndexSpan": {
        "Start": 908,
        "Length": 8
      }
    },
    {
      "Value": "t:requests.exceptions:RequestsDependencyWarning",
      "Id": -802098666,
      "Name": "RequestsDependencyWarning",
      "IndexSpan": {
        "Start": 941,
        "Length": 25
      }
    },
    {
      "Value": "p:urllib3.contrib.pyopenssl",
      "Id": -1632802014,
      "Name": "pyopenssl",
      "IndexSpan": {
        "Start": 2657,
        "Length": 9
      }
    },
    {
      "Value": "t:urllib3.exceptions:DependencyWarning",
      "Id": -891041158,
      "Name": "DependencyWarning",
      "IndexSpan": {
        "Start": 2960,
        "Length": 17
      }
    },
    {
      "Value": "i:str",
      "Id": 916650529,
      "Name": "__title__",
      "IndexSpan": {
        "Start": 3055,
        "Length": 9
      }
    },
    {
      "Value": "i:str",
      "Id": -1883656187,
      "Name": "__description__",
      "IndexSpan": {
        "Start": 3066,
        "Length": 15
      }
    },
    {
      "Value": "i:str",
      "Id": -1620207176,
      "Name": "__url__",
      "IndexSpan": {
        "Start": 3083,
        "Length": 7
      }
    },
    {
      "Value": "i:str",
      "Id": 1161199201,
      "Name": "__version__",
      "IndexSpan": {
        "Start": 3092,
        "Length": 11
      }
    },
    {
      "Value": "i:int",
      "Id": -1840123721,
      "Name": "__build__",
      "IndexSpan": {
        "Start": 3129,
        "Length": 9
      }
    },
    {
      "Value": "i:str",
      "Id": 1654469090,
      "Name": "__author__",
      "IndexSpan": {
        "Start": 3140,
        "Length": 10
      }
    },
    {
      "Value": "i:str",
      "Id": -94198849,
      "Name": "__author_email__",
      "IndexSpan": {
        "Start": 3152,
        "Length": 16
      }
    },
    {
      "Value": "i:str",
      "Id": -386551926,
      "Name": "__license__",
      "IndexSpan": {
        "Start": 3170,
        "Length": 11
      }
    },
    {
      "Value": "i:str",
      "Id": 1739624272,
      "Name": "__copyright__",
      "IndexSpan": {
        "Start": 3207,
        "Length": 13
      }
    },
    {
      "Value": "i:str",
      "Id": 782136591,
      "Name": "__cake__",
      "IndexSpan": {
        "Start": 3222,
        "Length": 8
      }
    },
    {
      "Value": "p:requests.utils",
      "Id": 770082554,
      "Name": "utils",
      "IndexSpan": {
        "Start": 3246,
        "Length": 5
      }
    },
    {
      "Value": "p:requests.packages",
      "Id": 2129088004,
      "Name": "packages",
      "IndexSpan": {
        "Start": 3266,
        "Length": 8
      }
    },
    {
      "Value": "t:requests.models:Request",
      "Id": -104689032,
      "Name": "Request",
      "IndexSpan": {
        "Start": 3295,
        "Length": 7
      }
    },
    {
      "Value": "t:requests.models:Response",
      "Id": 1102541176,
      "Name": "Response",
      "IndexSpan": {
        "Start": 3304,
        "Length": 8
      }
    },
    {
      "Value": "t:requests.models:PreparedRequest",
      "Id": 1337118331,
      "Name": "PreparedRequest",
      "IndexSpan": {
        "Start": 3314,
        "Length": 15
      }
    },
    {
      "Value": "t:requests.sessions:Session",
      "Id": 784605823,
      "Name": "Session",
      "IndexSpan": {
        "Start": 3432,
        "Length": 7
      }
    },
    {
      "Value": "i:requests.structures:LookupDict",
      "Id": 753305199,
      "Name": "codes",
      "IndexSpan": {
        "Start": 3466,
        "Length": 5
      }
    },
    {
      "Value": "t:requests.exceptions:RequestException",
      "Id": 355509431,
      "Name": "RequestException",
      "IndexSpan": {
        "Start": 3502,
        "Length": 16
      }
    },
    {
      "Value": "t:requests.exceptions:Timeout",
      "Id": 1780673866,
      "Name": "Timeout",
      "IndexSpan": {
        "Start": 3520,
        "Length": 7
      }
    },
    {
      "Value": "t:requests.exceptions:URLRequired",
      "Id": 1361573271,
      "Name": "URLRequired",
      "IndexSpan": {
        "Start": 3529,
        "Length": 11
      }
    },
    {
      "Value": "t:requests.exceptions:TooManyRedirects",
      "Id": 511002043,
      "Name": "TooManyRedirects",
      "IndexSpan": {
        "Start": 3546,
        "Length": 16
      }
    },
    {
      "Value": "t:requests.exceptions:HTTPError",
      "Id": -1546903511,
      "Name": "HTTPError",
      "IndexSpan": {
        "Start": 3564,
        "Length": 9
      }
    },
    {
      "Value": "t:requests.exceptions:ConnectionError",
      "Id": 853386419,
      "Name": "ConnectionError",
      "IndexSpan": {
        "Start": 3575,
        "Length": 15
      }
    },
    {
      "Value": "t:requests.exceptions:FileModeWarning",
      "Id": 1675678790,
      "Name": "FileModeWarning",
      "IndexSpan": {
        "Start": 3596,
        "Length": 15
      }
    },
    {
      "Value": "t:requests.exceptions:ConnectTimeout",
      "Id": -1047738098,
      "Name": "ConnectTimeout",
      "IndexSpan": {
        "Start": 3613,
        "Length": 14
      }
    },
    {
      "Value": "t:requests.exceptions:ReadTimeout",
      "Id": -1711523244,
      "Name": "ReadTimeout",
      "IndexSpan": {
        "Start": 3629,
        "Length": 11
      }
    },
    {
      "Value": "p:logging",
      "Id": 1772213096,
      "Name": "logging",
      "IndexSpan": {
        "Start": 3719,
        "Length": 7
      }
    },
    {
      "Value": "t:logging:NullHandler",
      "Id": -1600735444,
      "Name": "NullHandler",
      "IndexSpan": {
        "Start": 3747,
        "Length": 11
      }
    }
  ],
  "Classes": [],
  "NewLines": [
    {
      "EndIndex": 24,
      "Kind": 1
    },
    {
      "EndIndex": 25,
      "Kind": 1
    },
    {
      "EndIndex": 32,
      "Kind": 1
    },
    {
      "EndIndex": 63,
      "Kind": 1
    },
    {
      "EndIndex": 93,
      "Kind": 1
    },
    {
      "EndIndex": 106,
      "Kind": 1
    },
    {
      "EndIndex": 107,
      "Kind": 1
    },
    {
      "EndIndex": 111,
      "Kind": 1
    },
    {
      "EndIndex": 133,
      "Kind": 1
    },
    {
      "EndIndex": 155,
      "Kind": 1
    },
    {
      "EndIndex": 156,
      "Kind": 1
    },
    {
      "EndIndex": 232,
      "Kind": 1
    },
    {
      "EndIndex": 239,
      "Kind": 1
    },
    {
      "EndIndex": 240,
      "Kind": 1
    },
    {
      "EndIndex": 263,
      "Kind": 1
    },
    {
      "EndIndex": 313,
      "Kind": 1
    },
    {
      "EndIndex": 334,
      "Kind": 1
    },
    {
      "EndIndex": 341,
      "Kind": 1
    },
    {
      "EndIndex": 396,
      "Kind": 1
    },
    {
      "EndIndex": 404,
      "Kind": 1
    },
    {
      "EndIndex": 405,
      "Kind": 1
    },
    {
      "EndIndex": 418,
      "Kind": 1
    },
    {
      "EndIndex": 419,
      "Kind": 1
    },
    {
      "EndIndex": 471,
      "Kind": 1
    },
    {
      "EndIndex": 538,
      "Kind": 1
    },
    {
      "EndIndex": 559,
      "Kind": 1
    },
    {
      "EndIndex": 564,
      "Kind": 1
    },
    {
      "EndIndex": 573,
      "Kind": 1
    },
    {
      "EndIndex": 588,
      "Kind": 1
    },
    {
      "EndIndex": 613,
      "Kind": 1
    },
    {
      "EndIndex": 637,
      "Kind": 1
    },
    {
      "EndIndex": 645,
      "Kind": 1
    },
    {
      "EndIndex": 654,
      "Kind": 1
    },
    {
      "EndIndex": 659,
      "Kind": 1
    },
    {
      "EndIndex": 660,
      "Kind": 1
    },
    {
      "EndIndex": 738,
      "Kind": 1
    },
    {
      "EndIndex": 774,
      "Kind": 1
    },
    {
      "EndIndex": 775,
      "Kind": 1
    },
    {
      "EndIndex": 814,
      "Kind": 1
    },
    {
      "EndIndex": 866,
      "Kind": 1
    },
    {
      "EndIndex": 870,
      "Kind": 1
    },
    {
      "EndIndex": 871,
      "Kind": 1
    },
    {
      "EndIndex": 886,
      "Kind": 1
    },
    {
      "EndIndex": 901,
      "Kind": 1
    },
    {
      "EndIndex": 917,
      "Kind": 1
    },
    {
      "EndIndex": 967,
      "Kind": 1
    },
    {
      "EndIndex": 968,
      "Kind": 1
    },
    {
      "EndIndex": 969,
      "Kind": 1
    },
    {
      "EndIndex": 1028,
      "Kind": 1
    },
    {
      "EndIndex": 1077,
      "Kind": 1
    },
    {
      "EndIndex": 1159,
      "Kind": 1
    },
    {
      "EndIndex": 1160,
      "Kind": 1
    },
    {
      "EndIndex": 1219,
      "Kind": 1
    },
    {
      "EndIndex": 1253,
      "Kind": 1
    },
    {
      "EndIndex": 1289,
      "Kind": 1
    },
    {
      "EndIndex": 1290,
      "Kind": 1
    },
    {
      "EndIndex": 1329,
      "Kind": 1
    },
    {
      "EndIndex": 1385,
      "Kind": 1
    },
    {
      "EndIndex": 1446,
      "Kind": 1
    },
    {
      "EndIndex": 1479,
      "Kind": 1
    },
    {
      "EndIndex": 1501,
      "Kind": 1
    },
    {
      "EndIndex": 1524,
      "Kind": 1
    },
    {
      "EndIndex": 1547,
      "Kind": 1
    },
    {
      "EndIndex": 1548,
      "Kind": 1
    },
    {
      "EndIndex": 1587,
      "Kind": 1
    },
    {
      "EndIndex": 1644,
      "Kind": 1
    },
    {
      "EndIndex": 1705,
      "Kind": 1
    },
    {
      "EndIndex": 1737,
      "Kind": 1
    },
    {
      "EndIndex": 1759,
      "Kind": 1
    },
    {
      "EndIndex": 1780,
      "Kind": 1
    },
    {
      "EndIndex": 1802,
      "Kind": 1
    },
    {
      "EndIndex": 1803,
      "Kind": 1
    },
    {
      "EndIndex": 1804,
      "Kind": 1
    },
    {
      "EndIndex": 1851,
      "Kind": 1
    },
    {
      "EndIndex": 1878,
      "Kind": 1
    },
    {
      "EndIndex": 1887,
      "Kind": 1
    },
    {
      "EndIndex": 1966,
      "Kind": 1
    },
    {
      "EndIndex": 1989,
      "Kind": 1
    },
    {
      "EndIndex": 2004,
      "Kind": 1
    },
    {
      "EndIndex": 2005,
      "Kind": 1
    },
    {
      "EndIndex": 2046,
      "Kind": 1
    },
    {
      "EndIndex": 2148,
      "Kind": 1
    },
    {
      "EndIndex": 2206,
      "Kind": 1
    },
    {
      "EndIndex": 2207,
      "Kind": 1
    },
    {
      "EndIndex": 2256,
      "Kind": 1
    },
    {
      "EndIndex": 2261,
      "Kind": 1
    },
    {
      "EndIndex": 2327,
      "Kind": 1
    },
    {
      "EndIndex": 2364,
      "Kind": 1
    },
    {
      "EndIndex": 2440,
      "Kind": 1
    },
    {
      "EndIndex": 2519,
      "Kind": 1
    },
    {
      "EndIndex": 2564,
      "Kind": 1
    },
    {
      "EndIndex": 2565,
      "Kind": 1
    },
    {
      "EndIndex": 2620,
      "Kind": 1
    },
    {
      "EndIndex": 2625,
      "Kind": 1
    },
    {
      "EndIndex": 2667,
      "Kind": 1
    },
    {
      "EndIndex": 2703,
      "Kind": 1
    },
    {
      "EndIndex": 2704,
      "Kind": 1
    },
    {
      "EndIndex": 2737,
      "Kind": 1
    },
    {
      "EndIndex": 2802,
      "Kind": 1
    },
    {
      "EndIndex": 2848,
      "Kind": 1
    },
    {
      "EndIndex": 2868,
      "Kind": 1
    },
    {
      "EndIndex": 2877,
      "Kind": 1
    },
    {
      "EndIndex": 2878,
      "Kind": 1
    },
    {
      "EndIndex": 2929,
      "Kind": 1
    },
    {
      "EndIndex": 2978,
      "Kind": 1
    },
    {
      "EndIndex": 3029,
      "Kind": 1
    },
    {
      "EndIndex": 3030,
      "Kind": 1
    },
    {
      "EndIndex": 3104,
      "Kind": 1
    },
    {
      "EndIndex": 3182,
      "Kind": 1
    },
    {
      "EndIndex": 3231,
      "Kind": 1
    },
    {
      "EndIndex": 3232,
      "Kind": 1
    },
    {
      "EndIndex": 3252,
      "Kind": 1
    },
    {
      "EndIndex": 3275,
      "Kind": 1
    },
    {
      "EndIndex": 3330,
      "Kind": 1
    },
    {
      "EndIndex": 3401,
      "Kind": 1
    },
    {
      "EndIndex": 3440,
      "Kind": 1
    },
    {
      "EndIndex": 3472,
      "Kind": 1
    },
    {
      "EndIndex": 3498,
      "Kind": 1
    },
    {
      "EndIndex": 3542,
      "Kind": 1
    },
    {
      "EndIndex": 3592,
      "Kind": 1
    },
    {
      "EndIndex": 3641,
      "Kind": 1
    },
    {
      "EndIndex": 3643,
      "Kind": 1
    },
    {
      "EndIndex": 3644,
      "Kind": 1
    },
    {
      "EndIndex": 3712,
      "Kind": 1
    },
    {
      "EndIndex": 3727,
      "Kind": 1
    },
    {
      "EndIndex": 3759,
      "Kind": 1
    },
    {
      "EndIndex": 3760,
      "Kind": 1
    },
    {
      "EndIndex": 3814,
      "Kind": 1
    },
    {
      "EndIndex": 3815,
      "Kind": 1
    },
    {
      "EndIndex": 3858,
      "Kind": 1
    },
    {
      "EndIndex": 3921,
      "Kind": 1
    }
  ],
  "FileSize": 3921,
  "Id": -203071489,
  "Name": "requests",
  "IndexSpan": null
}